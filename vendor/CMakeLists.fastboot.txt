add_library(libzip STATIC
	libziparchive/zip_archive.cc
	libziparchive/zip_archive_stream_entry.cc
	libziparchive/zip_cd_entry_map.cc
	libziparchive/zip_error.cpp
	libziparchive/zip_writer.cc)

target_compile_definitions(libzip PRIVATE -DZLIB_CONST)
target_include_directories(libzip PUBLIC
	libziparchive/include
	core/include
	logging/liblog/include
	libbase/include)

add_library(libutil STATIC
	core/libutils/FileMap.cpp
	core/libutils/SharedBuffer.cpp
	core/libutils/String16.cpp
	core/libutils/String8.cpp
	core/libutils/VectorImpl.cpp
	core/libutils/Unicode.cpp)

target_include_directories(libutil PUBLIC
	core/include
	logging/liblog/include
	core/libutils/include
	libbase/include)

add_library(libext4 STATIC
	extras/ext4_utils/ext4_utils.cpp
	extras/ext4_utils/wipe.cpp
	extras/ext4_utils/ext4_sb.cpp)

target_include_directories(libext4 PUBLIC
	core/libsparse/include core/include selinux/libselinux/include
	extras/ext4_utils/include libbase/include)

add_library(libfsmgr STATIC
	core/fs_mgr/liblp/images.cpp
	core/fs_mgr/liblp/partition_opener.cpp
	core/fs_mgr/liblp/reader.cpp
	core/fs_mgr/liblp/utility.cpp
	core/fs_mgr/liblp/writer.cpp)
target_include_directories(libfsmgr PRIVATE
	core/fs_mgr/liblp/include libbase/include
	extras/ext4_utils/include core/libsparse/include
	boringssl/include)
target_link_libraries(libfsmgr PUBLIC fmt::fmt)

add_executable(fastboot
	core/fastboot/bootimg_utils.cpp
	core/fastboot/fastboot.cpp
	core/fastboot/fastboot_driver.cpp
	core/fastboot/fs.cpp
	core/fastboot/main.cpp
	core/fastboot/socket.cpp
	core/fastboot/tcp.cpp
	core/fastboot/udp.cpp
	core/fastboot/usb_libusb.cpp
	core/fastboot/vendor_boot_img_utils.cpp
	core/fastboot/util.cpp)

target_include_directories(fastboot PRIVATE
	libbase/include core/include core/adb core/libsparse/include
	extras/ext4_utils/include extras/f2fs_utils
	core/libziparchive/include mkbootimg/include/bootimg
	core/fs_mgr/liblp/include core/fs_mgr/libstorage_literals avb)
target_compile_definitions(fastboot PRIVATE
	-DPLATFORM_TOOLS_VERSION="${ANDROID_VERSION}"
	-DPLATFORM_TOOLS_VENDOR="${ANDROID_VENDOR}"
	-D_GNU_SOURCE -D_XOPEN_SOURCE=700 -DUSE_F2FS
	-DANDROID_MKE2FS_NAME="${ANDROID_MKE2FS_NAME}")
target_link_libraries(fastboot
	libsparse libzip libcutils liblog libfsmgr libutil
	libbase libext4 libdiagnoseusb crypto
	z pthread dl usb ${PCRE2_LIBRARY})
